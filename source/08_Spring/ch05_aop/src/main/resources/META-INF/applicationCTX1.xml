<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.1.xsd">
	
	<bean id="student" class="com.lec.ch05.ex1.Student">
		<property name="name" value="홍길동"/>
		<property name="age" value="31"/>
		<property name="grade" value="3"/>
		<property name="classNum" value="1"/>
	</bean>
	<bean id="worker" class="com.lec.ch05.ex1.Worker">
		<property name="name" value="홍"/>
		<property name="age" value="31"/>
		<property name="job" value="개발훈련생"/>
	</bean>
	<bean id="proxyClass" class="com.lec.ch05.ex1.ProxyClass"></bean>
	<aop:config>
		<aop:aspect id="aroundAspect" ref="proxyClass">
			<aop:pointcut expression="within(com.lec.ch05.ex1.*)" id="aroundM"/>
			<aop:around method="aroundAdvice" pointcut-ref="aroundM"/>
		</aop:aspect>
		
		<aop:aspect id="beforeAspect" ref="proxyClass">
			<aop:pointcut expression="execution(* com.lec.ch05.ex1.Worker.get*())" id="beforeM"/>
			<aop:before method="beforeAdvice" pointcut-ref="beforeM"/>
		</aop:aspect>
		
		<aop:aspect id="afterAspect" ref="proxyClass">
			<aop:pointcut expression="bean(stud*)" id="afterM"/>
			<aop:after method="afterAdvice" pointcut-ref="afterM"/>
		</aop:aspect>
		
		<aop:aspect id="afterReturningAspect" ref="proxyClass">
			<aop:pointcut expression="within(com.lec.ch05.ex1.Worker)" id="afterReturningM"/>
			<aop:after-returning method="afterReturningAdvice" pointcut-ref="afterReturningM"/>
		</aop:aspect>
		<aop:aspect id="afterThrowingAspect" ref="proxyClass">
			<aop:pointcut expression="execution(void com.lec.ch05.ex1.Student.*())" id="afterThrowingM"/>
			<aop:after-throwing method="afterThrowingAdvice" pointcut-ref="afterThrowingM"/>
		</aop:aspect>
	</aop:config>
	
	
</beans>
