-- 연습문제 1.
--(1)
CREATE TABLE MY_DATA (
    ID NUMBER(4) PRIMARY KEY,
    NAME VARCHAR2(10),
    USERID VARCHAR2(30),
    SALARY NUMBER(10, 2) );
    
-- (2)    
INSERT INTO MY_DATA VALUES (1, 'SCOTT', 'SSCOTT', 10000);
INSERT INTO MY_DATA VALUES (2, 'FORD', 'FFORD', 13000);
INSERT INTO MY_DATA VALUES (3, 'PATEL', 'PPATEL', 33000);
INSERT INTO MY_DATA VALUES (4, 'REPORT', 'RREPORT', 23500);
INSERT INTO MY_DATA VALUES (5, 'GOOD', 'GGOOD', 44450);

-- (3)
SELECT ID, INITCAP(NAME) NAME, LOWER(USERID) USERID, TO_CHAR(SALARY, '99,999.99') SALARY
    FROM MY_DATA;
    
-- (4)
COMMIT;

-- (5)
UPDATE MY_DATA SET SALARY = 65000.00 WHERE ID = 3;
COMMIT;

-- (6)
DELETE FROM MY_DATA WHERE NAME = 'FORD';
COMMIT;

-- (7)
UPDATE MY_DATA SET SAL = 15000.00 WHERE SAL <= 15000;

-- (8)
DROP TABLE MY_DATA;

-- 연습문제 2.
CREATE TABLE SAM01 (
    ENAME NUMBER(4),
    ENAME VARCHAR2(10),
    JOB VARCHAR2(9),
    SAL NUMBER(7, 2) );

INSERT INTO SAM01 VALUES (1000, 'APPLE', 'POLICE', 10000);
INSERT INTO SAM01 VALUES (1010, 'BANANA', 'NURSE', 15000);
INSERT INTO SAM01 VALUES (1020, 'ORANGE', 'DOCTOR', 25000);
INSERT INTO SAM01 VALUES (1030, 'VERY', NULL, 25000);
INSERT INTO SAM01 VALUES (1040, 'CAT', NULL, 2000);
INSERT INTO SAM01 SELECT EMPNO, ENAME, JOB, SAL FROM EMP WHERE DEPTNO = 10;

-- 연습문제 3.
CREATE TABLE EMP01 SELECT * FROM EMP;
UPDATE EMP01 SET DEPTNO = 30;
UPDATE EMP01 SET SAL = SAL * 1.1;
UPDATE EMP01 SET SAL = SAL * 1.1 WHERE SAL >= 3000;
UPDATE EMP01 SET SAL = SAL + 1000 WHERE DEPTNO = (SELECT DEPTNO FROM DEPT WHERE LOC = 'DALLAS');
UPDATE EMP01 SET (DEPTNO, JOB) = (SELECT DEPTNO, JOB FROM EMP WHERE DEPTNO = 20 AND JOB = MANAGER);
DELETE FROM EMP01 WHERE DEPTNO = (SELECT DEPTNO FROM DEPT WHERE DNAME = 'SALES');
DELETE FROM SAM01 WHERE JOB IS NULL;
DELETE FROM SAM01 WHERE ENAME = 'ORANGE';

-- 연습문제 4.
CREATE TABLE BOOKCATEGORY (
    CATEGORY_CODE NUMBER(3),
    CATEGORY_NAME VARCHAR2(50) UNIQUE,
    OFFICE_LOC VARCHAR2(50) NOT NULL,
    PRIMARY KEY (CATEGORY_CODE) );
    
INSERT INTO BOOKCATEGORY VALUES (100, '철학', '3층 인문실');
INSERT INTO BOOKCATEGORY VALUES (200, '인문', '3층 인문실');
INSERT INTO BOOKCATEGORY VALUES (300, '자연과학', '4층 과학실');
INSERT INTO BOOKCATEGORY VALUES (400, 'IT', '4층 과학실');
    
DROP TABLE BOOK;
CREATE TABLE BOOK (
    BOOKNO VARCHAR2(10),
    CATEGORY_CODE NUMBER(3),
    BOOKNAME VARCHAR(50),
    PUBLISHER VARCHAR(50),
    PUBYEAR NUMBER(4) DEFAULT EXTRACT(YEAR FROM SYSDATE),
    PRIMARY KEY (BOOKNO),
    FOREIGN KEY (CATEGORY_CODE) REFERENCES BOOKCATEGORY (CATEGORY_CODE) );

INSERT INTO BOOK (BOOKNO, CATEGORY_CODE, BOOKNAME, PUBLISHER)
    VALUES ('100A01', 100, '철학자의 삶', '더존출판');
INSERT INTO BOOK (BOOKNO, CATEGORY_CODE, BOOKNAME, PUBLISHER)
    VALUES ('400A01', 400, '이것이 DB다', '더존출판');

SELECT * FROM BOOKCATEGORY;
SELECT * FROM BOOK;

-- 연습문제 5.
CREATE TABLE MAJOR (
    MAJOR_CODE NUMBER(2),
    MAJOR_NAME VARCHAR2(30) UNIQUE,
    MAJOR_OFFICE_LOC VARCHAR2(60) NOT NULL,
    PRIMARY KEY(MAJOR_CODE) );
    
INSERT INTO MAJOR VALUES (1, '경영정보', '경영관 305호');
INSERT INTO MAJOR VALUES (2, '소프트웨어공학', '정보관 808호');
INSERT INTO MAJOR VALUES (3, '디자인', '예술관 606호');
INSERT INTO MAJOR VALUES (4, '경제', '경상관 202호');

CREATE TABLE STUDENT (
    STUDENT_CODE VARCHAR2(5),
    STUDENT_NAME VARCHAR2(30) NOT NULL,
    SCORE NUMBER(3),
    MAJOR_CODE NUMBER(2),
    PRIMARY KEY (STUDENT_CODE),
    CHECK (SCORE > 0),
    CHECK (SCORE <=100),
    FOREIGN KEY (MAJOR_CODE) REFERENCES MAJOR (MAJOR_CODE) );
    
INSERT INTO STUDENT VALUES ('A01', '김길동', 100, 1);
INSERT INTO STUDENT VALUES ('A02', '문길동', 90, 2);
INSERT INTO STUDENT VALUES ('A03', '홍길동', 95, 1);

SELECT * FROM MAJOR;
SELECT * FROM STUDENT;


-- 총 연습문제 1.
CREATE TABLE MEMBER_LEVEL (
    LEVELNO NUMBER(1),
    LEVELNAME VARCHAR2(10) NOT NULL,
    PRIMARY KEY (LEVELNO) );

INSERT INTO MEMBER_LEVEL VALUES (-1, 'black');
INSERT INTO MEMBER_LEVEL VALUES (0, '일반');
INSERT INTO MEMBER_LEVEL VALUES (1, '실버');
INSERT INTO MEMBER_LEVEL VALUES (2, '골드');

CREATE SEQUENCE MEMBER_SEQ;
    
CREATE TABLE MEMBER (
    MNO NUMBER(3),
    MNAME VARCHAR2(30) NOT NULL,
    MPW VARCHAR2(8) NOT NULL,
    MMAIL VARCHAR2(20) UNIQUE,
    MPOINT NUMBER(6),
    MRDATE DATE DEFAULT SYSDATE,
    LEVELNO NUMBER(1),
    PRIMARY KEY (MNO),
    CHECK (LENGTH(MPW) <= 8),
    CHECK (MPOINT >= 0),
    FOREIGN KEY (LEVELNO) REFERENCES MEMBER_LEVEL (LEVELNO) );
    
INSERT INTO MEMBER VALUES (MEMBER_SEQ.NEXTVAL, '홍길동', 'aa', 'hong@hong.com', 0, '22/03/10', 0);
INSERT INTO MEMBER (MNO, MNAME, MPW, MMAIL, MPOINT, LEVELNO)
    VALUES (MEMBER_SEQ.NEXTVAL, '신길동', 'bb', 'sin@sin.com', 1000, 1);

SELECT * FROM MEMBER_LEVEL;
SELECT * FROM MEMBER;

SELECT MNO, MNAME, TO_CHAR(MRDATE, 'YYYY-MM-DD') "mRDATE", MMAIL, MPOINT, LEVELNAME||'고객' "levelname"
    FROM MEMBER M, MEMBER_LEVEL ML
    WHERE M.LEVELNO = ML.LEVELNO;



