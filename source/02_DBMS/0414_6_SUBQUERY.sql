-- [Ⅵ] SUB QUERY : QUERY 안에 QUERY가 내포
-- SELECT 필드1                        * 서브쿼리 = (SELECT 필드 FROM 테이블 WHERE 조건)
--  FROM 테이블
--  WHERE 조건 (서브쿼리)
-- 서브쿼리는 반드시 괄호로 감싸야함

-- 1. 서브쿼리 개념
-- ex. 최고 급여를 받는 사람의 사번, 이름, 직책, 급여

-- 서브쿼리
SELECT MAX(SAL) FROM EMP;

-- 메인쿼리
SELECT EMPNO, ENAME, JOB, SAL
    FROM EMP
    WHERE SAL = (SELECT MAX(SAL) FROM EMP);

-- 서브쿼리의 종류(1) 단일행 서브쿼리(서브쿼리의 결과가 단일행) : =, >, >=, <, <=, !=
-- ex. SCOTT이 근무하는 부서번호 출력
SELECT DEPTNO FROM EMP WHERE ENAME = 'SCOTT';  -- 서브쿼리
SELECT DNAME
    FROM DEPT 
    WHERE DEPTNO = (SELECT DEPTNO FROM EMP WHERE ENAME = 'SCOTT');  -- 메인쿼리(서브쿼리 사용)

SELECT DNAME
    FROM EMP E, DEPT D
    WHERE E.DEPTNO = D.DEPTNO AND ENAME = 'SCOTT';  -- JOIN 사용

-- 서브쿼리의 종류(2) 다중행 서브쿼리(서브쿼리 결과가 2행이상) : IN, ANY, ALL, EXISTS
-- ex. JOB이 MANAGER인 사람의 부서이름
SELECT DEPTNO FROM EMP WHERE JOB = 'MANAGER';  -- 서브쿼리
SELECT DNAME 
    FROM DEPT 
    WHERE DEPTNO IN (SELECT DEPTNO FROM EMP WHERE JOB = 'MANAGER');
    
SELECT DNAME FROM DEPT WHERE DEPTNO IN (10, 20, 30);
    
-- 2. 단일행 서브쿼리
SELECT E.DEPTNO, LOC FROM EMP E, DEPT D WHERE E.DEPTNO = D.DEPTNO AND ENAME = 'SCOTT';
INSERT INTO DEPT VALUES (50, 'IT', 'DALLAS');
INSERT INTO EMP (EMPNO, ENAME, DEPTNO) VALUES (9999, '홍길동', 50);

-- ex. SCOTT과 같은 부서인 사람의 이름과 급여 출력
SELECT DEPTNO FROM EMP WHERE ENAME = 'SCOTT';
SELECT ENAME, SAL FROM EMP 
    WHERE DEPTNO = (SELECT DEPTNO FROM EMP WHERE ENAME = 'SCOTT') 
    AND ENAME != 'SCOTT';
    
-- ex. SCOTT과 같은 근무지인 사람의 이름과 급여 출력 
SELECT LOC FROM EMP E, DEPT D WHERE E.DEPTNO = D.DEPTNO AND ENAME = 'SCOTT';
SELECT ENAME, SAL FROM EMP E, DEPT D 
    WHERE E.DEPTNO = D.DEPTNO
    AND LOC = (SELECT LOC FROM EMP E, DEPT D WHERE E.DEPTNO = D.DEPTNO AND ENAME = 'SCOTT')
    AND ENAME != 'SCOTT';

-- ex. 최초입사일과 최초입사한 사람의 이름, 최근입사일과 최근입사한 사람의 이름
-- 1단계
SELECT MIN(HIREDATE) FROM EMP;
SELECT HIREDATE, ENAME FROM EMP WHERE HIREDATE = (SELECT MIN(HIREDATE) FROM EMP);
-- 2단계
SELECT MAX(HIREDATE) FROM EMP;
SELECT HIREDATE, ENAME FROM EMP WHERE HIREDATE = (SELECT MAX(HIREDATE) FROM EMP);
-- 3단계
SELECT E1.HIREDATE FIRST, E1.ENAME FIRSTMAN, E2.HIREDATE LAST, E2.ENAME LASTMAN
    FROM EMP E1, EMP E2
    WHERE E1.HIREDATE = (SELECT MIN(HIREDATE) FROM EMP)
    AND E2.HIREDATE = (SELECT MAX(HIREDATE) FROM EMP);
-- 다른답
SELECT (SELECT MIN(HIREDATE) FROM EMP),
       (SELECT ENAME FROM EMP WHERE HIREDATE = (SELECT MIN(HIREDATE) FROM EMP)),
       (SELECT MAX(HIREDATE) FROM EMP),
       (SELECT ENAME FROM EMP WHERE HIREDATE = (SELECT MAX(HIREDATE) FROM EMP))
    FROM DUAL;

-- ex. SCOTT과 같은 부서에 근무하는 사람들의 급여합
SELECT DEPTNO FROM EMP WHERE ENAME = 'SCOTT';
SELECT SUM(SAL) FROM EMP WHERE DEPTNO = (SELECT DEPTNO FROM EMP WHERE ENAME = 'SCOTT');

-- ex. SCOTT과 동일한 직책(JOB)을 가진 사원의 모든 필드
SELECT JOB FROM EMP WHERE ENAME = 'SCOTT';
SELECT * FROM EMP WHERE JOB = (SELECT JOB FROM EMP WHERE ENAME = 'SCOTT');

-- ex. 'KING'이 직속상사인 사원의 이름과 급여
SELECT EMPNO FROM EMP WHERE ENAME = 'KING';
SELECT ENAME, SAL FROM EMP WHERE MGR = (SELECT EMPNO FROM EMP WHERE ENAME = 'KING');

SELECT W.ENAME, W.SAL
    FROM EMP W, EMP M
    WHERE W.MGR = M.EMPNO
    AND M.ENAME = 'KING';
    
-- ex. 평균 급여 이하로 받는 사원의 이름과 급여 출력
SELECT AVG(SAL) FROM EMP;
SELECT ENAME, SAL FROM EMP WHERE SAL <= (SELECT AVG(SAL) FROM EMP);

-- ex. 평균급여 이하로 받는 사원의 이름, 급여, 평균과 차이
SELECT ENAME, SAL, ROUND((SELECT AVG(SAL) FROM EMP)-SAL, 1) "DEFFRENCE" FROM EMP
    WHERE SAL<= (SELECT AVG(SAL) FROM EMP);
-- 단일행 다중열 서브쿼리
-- ex. SCOTT의 JOB과 DEPTNO가 같은 직원의 모든 필드
SELECT JOB, DEPTNO FROM EMP WHERE ENAME = 'SCOTT';
SELECT * FROM EMP WHERE (JOB, DEPTNO) = (SELECT JOB, DEPTNO FROM EMP WHERE ENAME = 'SCOTT');


-- 3. 다중행 서브쿼리 : IN, ALL, ANY=SOME, EXISTS
-- (1) IN : 서브쿼리 결과 중 하나라도 일치하면 참
-- ex. 부서번호별 입사일이 가장 늦은 사람의 이름, 입사일, 부서번호
SELECT ENAME, HIREDATE, DEPTNO FROM EMP E1
    WHERE (DEPTNO, HIREDATE) IN (SELECT DEPTNO, MAX(HIREDATE) FROM EMP GROUP BY DEPTNO);

-- ex. 급여 3000이상 받는 사원이 소속된 부서의 사원들의 모든 필드
SELECT * FROM EMP WHERE DEPTNO IN (SELECT DEPTNO FROM EMP WHERE SAL >= 3000);

-- (2) ALL : 서브쿼리 결과가 모두 만족해야 참
-- ex. 30번 부서의 모든 급여보다 큰 경우
-- 다중행 방법
SELECT SAL FROM EMP WHERE DEPTNO = 30;
SELECT * FROM EMP WHERE SAL > ALL(SELECT SAL FROM EMP WHERE DEPTNO = 30);

-- 단일행 방법
SELECT MAX(SAL) FROM EMP WHERE DEPTNO = 30;
SELECT * FROM EMP WHERE SAL > (SELECT MAX(SAL) FROM EMP WHERE DEPTNO = 30);

-- (3) ANY=SOME : 서브쿼리 결과가 하나라도 만족하면 참
-- ex. 30번 부서의 모든 급여 중에 하나라도 큰 경우
SELECT SAL FROM EMP WHERE DEPTNO = 30;
SELECT * FROM EMP WHERE SAL > ANY (SELECT SAL FROM EMP WHERE DEPTNO = 30);
SELECT * FROM EMP WHERE SAL > SOME (SELECT SAL FROM EMP WHERE DEPTNO = 30);

SELECT MIN(SAL) FROM EMP WHERE DEPTNO = 30;
SELECT * FROM EMP WHERE SAL > (SELECT MIN(SAL) FROM EMP WHERE DEPTNO = 30);

-- (4) EXISTS : 서브쿼리 결과가 존재하면 참
-- ex. 직속부하가 있는 직원들의 사번, 이름, 급여

SELECT EMPNO, ENAME, SAL
    FROM EMP M
    WHERE EXISTS (SELECT MGR FROM EMP W WHERE W.MGR = M.EMPNO);

SELECT EMPNO, ENAME, SAL FROM EMP M WHERE EXISTS (SELECT * FROM EMP W WHERE W.MGR = M.EMPNO);

SELECT DISTINCT M.EMPNO, M.ENAME, M.SAL FROM EMP W, EMP M WHERE W.MGR = M.EMPNO;

-- ex. 말단 사원의 모든 필드 출력
SELECT * FROM EMP M
    WHERE NOT EXISTS (SELECT * FROM EMP W WHERE M.EMPNO = W.MGR);

SELECT M.*
    FROM EMP W, EMP M
    WHERE W.MGR(+) = M.EMPNO AND W.ENAME IS NULL;

-- ex. 부서번호별 가장 급여를 많이 받는 사원의 정보
SELECT EMPNO, ENAME, SAL, DEPTNO 
    FROM EMP 
    WHERE (DEPTNO, SAL) IN (SELECT DEPTNO, MAX(SAL) FROM EMP GROUP BY DEPTNO);
    
-- ex. JOB이 MANAGER인 사람이 속한 부서의 부서번호와 부서명과 지역을 출력
SELECT DEPTNO, DNAME, LOC 
    FROM DEPT
    WHERE DEPTNO IN (SELECT DEPTNO FROM EMP WHERE JOB = 'MANAGER');

-- ex. 연봉이 3000이상인 사람들 중 연봉 등급을 나누어 해당 등급별 최고 연봉을 받는 사람들의
-- 사번, 이름, 직업, 입사일, 급여, 급여등급 출력
SELECT EMPNO, ENAME, JOB, HIREDATE, SAL, GRADE FROM EMP, SALGRADE
    WHERE (GRADE, SAL) IN (SELECT GRADE, MAX(SAL) 
                            FROM EMP, SALGRADE 
                            WHERE SAL BETWEEN LOSAL AND HISAL 
                            AND SAL >= 3000 
                            GROUP BY GRADE);

-- ex. 입사일 분기별로 가장 높은 급여를 받는 사람의
-- 분기, 사번, 이름, JOB, 상사사번, 입사일, 급여, 상여 출력
-- 1, 2, 3 -> 1 / 4, 5, 6 -> 2
SELECT MAX(SAL), CEIL(TO_CHAR(HIREDATE, 'MM')/3) "QUARTER" FROM EMP
    GROUP BY CEIL(TO_CHAR(HIREDATE, 'MM')/3);

SELECT CEIL(TO_CHAR(HIREDATE, 'MM')/3) "QUARTER", EMPNO, ENAME, JOB, MGR, HIREDATE, SAL, COMM
    FROM EMP
    WHERE (SAL, CEIL(TO_CHAR(HIREDATE, 'MM')/3)) IN (SELECT MAX(SAL), CEIL(TO_CHAR(HIREDATE, 'MM')/3) "QUARTER" FROM EMP
    GROUP BY CEIL(TO_CHAR(HIREDATE, 'MM')/3));

-- ex. SALESMAN인 사원들 보다 급여를 많이 받는 사원들의 이름, 급여, 업무
SELECT SAL FROM EMP WHERE JOB = 'SALESMAN';
SELECT ENAME, SAL, JOB FROM EMP
    WHERE SAL > ALL (SELECT SAL FROM EMP WHERE JOB = 'SALESMAN')
    AND JOB != 'SALESMAN';

SELECT ENAME, SAL, JOB FROM EMP
    WHERE SAL > (SELECT MAX(SAL) FROM EMP WHERE JOB = 'SALESMAN')
    AND JOB != 'SALESMAN';

-- ex. SALESMAN인 사원들 중 어떤 한 사원보다 급여를 많이 받는 사원들의 이름, 급여, 업무

SELECT ENAME, SAL, JOB FROM EMP
    WHERE SAL > ANY (SELECT SAL FROM EMP WHERE JOB = 'SALESMAN')
    AND JOB != 'SALESMAN';

SELECT ENAME, SAL, JOB FROM EMP
    WHERE SAL > (SELECT MIN(SAL) FROM EMP WHERE JOB = 'SALESMAN')
    AND JOB != 'SALESMAN';

-- ex. 급여가 3000미만인 사원들 중 가장 최근에 입사한 사람의 사원번호, 이름, 급여, 입사일
SELECT MAX(HIREDATE) FROM EMP WHERE SAL < 3000;
SELECT EMPNO, ENAME, SAL, HIREDATE FROM EMP 
    WHERE HIREDATE = (SELECT MAX(HIREDATE) FROM EMP)
    AND SAL < 3000;

-- ex. SALESMAN인 사원이 받는 급여의 최소값보다 많이 받는 사원의 이름, 급여, 직급, 부서번호(20 제외)

SELECT MIN(SAL) FROM EMP WHERE JOB = 'SALESMAN';

SELECT ENAME, SAL, JOB, DEPTNO FROM EMP
    WHERE SAL > (SELECT MIN(SAL) FROM EMP WHERE JOB = 'SALESMAN')
    AND DEPTNO != 20;




